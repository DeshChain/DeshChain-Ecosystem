events {
    worker_connections 2048;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/json;
    gzip_disable "MSIE [1-6]\.";

    # Upstream backends for blockchain nodes
    upstream blockchain_rpc {
        least_conn;
        server node0:26657 max_fails=3 fail_timeout=30s;
        server node1:26657 max_fails=3 fail_timeout=30s;
        server node2:26657 max_fails=3 fail_timeout=30s;
        server node3:26657 max_fails=3 fail_timeout=30s;
        server node4:26657 max_fails=3 fail_timeout=30s;
        server node5:26657 max_fails=3 fail_timeout=30s;
        server node6:26657 max_fails=3 fail_timeout=30s;
        server node7:26657 max_fails=3 fail_timeout=30s;
        server node8:26657 max_fails=3 fail_timeout=30s;
        server node9:26657 max_fails=3 fail_timeout=30s;
        server node10:26657 max_fails=3 fail_timeout=30s;
    }

    upstream blockchain_api {
        least_conn;
        server node0:1317 max_fails=3 fail_timeout=30s;
        server node1:1317 max_fails=3 fail_timeout=30s;
        server node2:1317 max_fails=3 fail_timeout=30s;
        server node3:1317 max_fails=3 fail_timeout=30s;
        server node4:1317 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=faucet_limit:10m rate=1r/m;

    # HTTP server for Let's Encrypt challenge
    server {
        listen 80;
        server_name deshchain.com www.deshchain.com explorer.deshchain.com testnet.deshchain.com faucet.deshchain.com;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Main website
    server {
        listen 443 ssl;
        http2 on;
        server_name deshchain.com www.deshchain.com;

        # Use Let's Encrypt certificates
        ssl_certificate /etc/letsencrypt/live/deshchain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/deshchain.com/privkey.pem;
        
        # Strong SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        location / {
            proxy_pass http://landing-page;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Explorer
    server {
        listen 443 ssl;
        http2 on;
        server_name explorer.deshchain.com;

        ssl_certificate /etc/letsencrypt/live/deshchain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/deshchain.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        location / {
            proxy_pass http://explorer-frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass http://explorer-backend:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
        }
    }

    # Testnet RPC/API
    server {
        listen 443 ssl;
        http2 on;
        server_name testnet.deshchain.com;

        ssl_certificate /etc/letsencrypt/live/deshchain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/deshchain.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Default to RPC
        location / {
            proxy_pass http://blockchain_rpc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Tendermint
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts for long-polling
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # REST API
        location /api {
            proxy_pass http://blockchain_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
        }

        # Cosmos REST endpoints
        location ~ ^/(cosmos|bank|staking|gov|distribution|slashing|mint|auth|tx) {
            proxy_pass http://blockchain_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Faucet
    server {
        listen 443 ssl;
        http2 on;
        server_name faucet.deshchain.com;

        ssl_certificate /etc/letsencrypt/live/deshchain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/deshchain.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        location / {
            proxy_pass http://faucet:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Strict rate limiting for faucet
            limit_req zone=faucet_limit burst=2 nodelay;
        }
    }

    # Health check endpoint
    server {
        listen 80;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
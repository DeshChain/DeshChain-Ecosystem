# DeshChain Docker Compose Configuration
# Provides full node setup with monitoring and utilities

version: '3.8'

services:
  # Main DeshChain node
  deshchain:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deshchain-node
    restart: unless-stopped
    ports:
      - "26656:26656"   # P2P
      - "26657:26657"   # RPC
      - "1317:1317"     # REST API
      - "9090:9090"     # gRPC
    volumes:
      - deshchain_data:/home/deshchain/.deshchain
      - ./docker/genesis:/genesis:ro
      - ./docker/config:/config:ro
      - ./docker/hooks:/hooks:ro
      - backup_data:/backup
    environment:
      - CHAIN_ID=deshchain-1
      - MONIKER=docker-validator
      - PERSISTENT_PEERS=${PERSISTENT_PEERS:-}
      - SEEDS=${SEEDS:-}
      - MINIMUM_GAS_PRICES=0.0001namo
      - ENABLE_API=true
      - ENABLE_GRPC=true
      - PRUNING=default
      - SNAPSHOT_INTERVAL=1000
      - GENESIS_URL=${GENESIS_URL:-}
      - USE_COSMOVISOR=true
      - ENABLE_MONITORING=true
      - BACKUP_ON_START=false
      - UNSAFE_SKIP_BACKUP=false
    healthcheck:
      test: ["CMD", "/usr/local/bin/health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - deshchain-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Validator node (for validator setup)
  deshchain-validator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deshchain-validator
    restart: unless-stopped
    ports:
      - "26656:26656"   # P2P
      - "26657:26657"   # RPC (internal only)
    volumes:
      - validator_data:/home/deshchain/.deshchain
      - ./docker/validator-config:/config:ro
      - ./docker/hooks:/hooks:ro
      - backup_data:/backup
    environment:
      - CHAIN_ID=deshchain-1
      - MONIKER=my-validator
      - PERSISTENT_PEERS=${PERSISTENT_PEERS:-}
      - SEEDS=${SEEDS:-}
      - MINIMUM_GAS_PRICES=0.0001namo
      - ENABLE_API=false
      - ENABLE_GRPC=false
      - PRUNING=custom
      - SNAPSHOT_INTERVAL=0
      - USE_COSMOVISOR=true
      - ENABLE_MONITORING=true
      - BACKUP_ON_START=true
      - UNSAFE_SKIP_BACKUP=false
    profiles:
      - validator
    networks:
      - deshchain-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: deshchain-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.listen-address=0.0.0.0:9090'
      - '--storage.tsdb.retention.time=30d'
    profiles:
      - monitoring
    networks:
      - deshchain-network

  # Grafana dashboard
  grafana:
    image: grafana/grafana:10.0.0
    container_name: deshchain-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    profiles:
      - monitoring
    networks:
      - deshchain-network

  # Node exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: deshchain-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    profiles:
      - monitoring
    networks:
      - deshchain-network

  # Process exporter for DeshChain specific metrics
  process-exporter:
    image: ncabatoff/process-exporter:0.7.10
    container_name: deshchain-process-exporter
    restart: unless-stopped
    ports:
      - "9256:9256"
    volumes:
      - /proc:/host/proc:ro
      - ./docker/process-exporter:/config:ro
    command:
      - '--procfs=/host/proc'
      - '--config.path=/config/process-exporter.yml'
    profiles:
      - monitoring
    networks:
      - deshchain-network

  # Alert manager for notifications
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: deshchain-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./docker/alertmanager:/etc/alertmanager:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.listen-address=0.0.0.0:9093'
    profiles:
      - monitoring
    networks:
      - deshchain-network

  # Backup service
  backup:
    build:
      context: ./docker/backup
      dockerfile: Dockerfile
    container_name: deshchain-backup
    restart: unless-stopped
    volumes:
      - deshchain_data:/data/deshchain:ro
      - validator_data:/data/validator:ro
      - backup_data:/backup
      - ./docker/backup/scripts:/scripts:ro
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}  # Daily at 2 AM
      - RETENTION_DAYS=${RETENTION_DAYS:-7}
      - BACKUP_COMPRESSION=${BACKUP_COMPRESSION:-gzip}
      - S3_BUCKET=${S3_BUCKET:-}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-}
    profiles:
      - backup
    networks:
      - deshchain-network

  # Load balancer (nginx)
  nginx:
    image: nginx:1.25-alpine
    container_name: deshchain-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./docker/nginx/html:/usr/share/nginx/html:ro
    profiles:
      - loadbalancer
    networks:
      - deshchain-network
    depends_on:
      - deshchain

  # Seed node for testing
  seed:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deshchain-seed
    restart: unless-stopped
    ports:
      - "26659:26656"   # Different P2P port
    volumes:
      - seed_data:/home/deshchain/.deshchain
    environment:
      - CHAIN_ID=deshchain-1
      - MONIKER=docker-seed
      - ENABLE_API=false
      - ENABLE_GRPC=false
      - PRUNING=nothing
      - SNAPSHOT_INTERVAL=0
    profiles:
      - testnet
    networks:
      - deshchain-network

volumes:
  deshchain_data:
    driver: local
  validator_data:
    driver: local
  seed_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  backup_data:
    driver: local

networks:
  deshchain-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
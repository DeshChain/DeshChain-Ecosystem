package types

import (
	"cosmossdk.io/errors"
)

// Explorer module errors
var (
	ErrInvalidBlockHeight      = errors.Register(ModuleName, 1, "invalid block height")
	ErrInvalidTransactionHash  = errors.Register(ModuleName, 2, "invalid transaction hash")
	ErrInvalidValidatorAddress = errors.Register(ModuleName, 3, "invalid validator address")
	ErrInvalidAddress          = errors.Register(ModuleName, 4, "invalid address")
	ErrInvalidSearchQuery      = errors.Register(ModuleName, 5, "invalid search query")
	ErrInvalidSearchType       = errors.Register(ModuleName, 6, "invalid search type")
	ErrInvalidTimePeriod       = errors.Register(ModuleName, 7, "invalid time period")
	ErrInvalidSortOrder        = errors.Register(ModuleName, 8, "invalid sort order")
	ErrInvalidSortField        = errors.Register(ModuleName, 9, "invalid sort field")
	ErrInvalidLimit            = errors.Register(ModuleName, 10, "invalid limit")
	ErrInvalidOffset           = errors.Register(ModuleName, 11, "invalid offset")
	ErrInvalidPageSize         = errors.Register(ModuleName, 12, "invalid page size")
	ErrInvalidParams           = errors.Register(ModuleName, 13, "invalid parameters")
	ErrInvalidAmount           = errors.Register(ModuleName, 14, "invalid amount")
	ErrInvalidBalance          = errors.Register(ModuleName, 15, "invalid balance")
	ErrInvalidScore            = errors.Register(ModuleName, 16, "invalid score")
	ErrInvalidRank             = errors.Register(ModuleName, 17, "invalid rank")
	ErrInvalidCategory         = errors.Register(ModuleName, 18, "invalid category")
	ErrInvalidAccountType      = errors.Register(ModuleName, 19, "invalid account type")
	ErrInvalidBurnType         = errors.Register(ModuleName, 20, "invalid burn type")
	ErrInvalidActivityType     = errors.Register(ModuleName, 21, "invalid activity type")
	ErrInvalidResultType       = errors.Register(ModuleName, 22, "invalid result type")
	ErrInvalidQuoteID          = errors.Register(ModuleName, 23, "invalid quote ID")
	ErrInvalidQuoteCategory    = errors.Register(ModuleName, 24, "invalid quote category")
	ErrInvalidQuoteAuthor      = errors.Register(ModuleName, 25, "invalid quote author")
	ErrInvalidTaxRate          = errors.Register(ModuleName, 26, "invalid tax rate")
	ErrInvalidFeeAmount        = errors.Register(ModuleName, 27, "invalid fee amount")
	ErrInvalidGasAmount        = errors.Register(ModuleName, 28, "invalid gas amount")
	ErrInvalidTimestamp        = errors.Register(ModuleName, 29, "invalid timestamp")
	ErrInvalidDuration         = errors.Register(ModuleName, 30, "invalid duration")
	ErrInvalidConfiguration    = errors.Register(ModuleName, 31, "invalid configuration")
	ErrInvalidPermissions      = errors.Register(ModuleName, 32, "invalid permissions")
	ErrInvalidAccess           = errors.Register(ModuleName, 33, "invalid access")
	ErrInvalidAuthorization    = errors.Register(ModuleName, 34, "invalid authorization")
	ErrInvalidAuthentication   = errors.Register(ModuleName, 35, "invalid authentication")
	ErrInvalidSignature        = errors.Register(ModuleName, 36, "invalid signature")
	ErrInvalidChecksum         = errors.Register(ModuleName, 37, "invalid checksum")
	ErrInvalidEncoding         = errors.Register(ModuleName, 38, "invalid encoding")
	ErrInvalidCompression      = errors.Register(ModuleName, 39, "invalid compression")
	ErrInvalidFormat           = errors.Register(ModuleName, 40, "invalid format")
	ErrInvalidVersion          = errors.Register(ModuleName, 41, "invalid version")
	ErrInvalidState            = errors.Register(ModuleName, 42, "invalid state")
	ErrInvalidStatus           = errors.Register(ModuleName, 43, "invalid status")
	ErrInvalidData             = errors.Register(ModuleName, 44, "invalid data")
	ErrInvalidMetadata         = errors.Register(ModuleName, 45, "invalid metadata")
	ErrInvalidInput            = errors.Register(ModuleName, 46, "invalid input")
	ErrInvalidOutput           = errors.Register(ModuleName, 47, "invalid output")
	ErrInvalidRequest          = errors.Register(ModuleName, 48, "invalid request")
	ErrInvalidResponse         = errors.Register(ModuleName, 49, "invalid response")
	ErrInvalidOperation        = errors.Register(ModuleName, 50, "invalid operation")

	// Block-related errors
	ErrBlockNotFound        = errors.Register(ModuleName, 51, "block not found")
	ErrBlockIndexingFailed  = errors.Register(ModuleName, 52, "block indexing failed")
	ErrBlockValidationFailed = errors.Register(ModuleName, 53, "block validation failed")
	ErrBlockProcessingFailed = errors.Register(ModuleName, 54, "block processing failed")
	ErrBlockStorageFailed   = errors.Register(ModuleName, 55, "block storage failed")
	ErrBlockRetrievalFailed = errors.Register(ModuleName, 56, "block retrieval failed")
	ErrBlockCorrupted       = errors.Register(ModuleName, 57, "block corrupted")
	ErrBlockIncomplete      = errors.Register(ModuleName, 58, "block incomplete")
	ErrBlockDuplicate       = errors.Register(ModuleName, 59, "block duplicate")
	ErrBlockOutOfOrder      = errors.Register(ModuleName, 60, "block out of order")

	// Transaction-related errors
	ErrTransactionNotFound        = errors.Register(ModuleName, 61, "transaction not found")
	ErrTransactionIndexingFailed  = errors.Register(ModuleName, 62, "transaction indexing failed")
	ErrTransactionValidationFailed = errors.Register(ModuleName, 63, "transaction validation failed")
	ErrTransactionProcessingFailed = errors.Register(ModuleName, 64, "transaction processing failed")
	ErrTransactionStorageFailed   = errors.Register(ModuleName, 65, "transaction storage failed")
	ErrTransactionRetrievalFailed = errors.Register(ModuleName, 66, "transaction retrieval failed")
	ErrTransactionCorrupted       = errors.Register(ModuleName, 67, "transaction corrupted")
	ErrTransactionIncomplete      = errors.Register(ModuleName, 68, "transaction incomplete")
	ErrTransactionDuplicate       = errors.Register(ModuleName, 69, "transaction duplicate")
	ErrTransactionExpired         = errors.Register(ModuleName, 70, "transaction expired")

	// Validator-related errors
	ErrValidatorNotFound        = errors.Register(ModuleName, 71, "validator not found")
	ErrValidatorIndexingFailed  = errors.Register(ModuleName, 72, "validator indexing failed")
	ErrValidatorValidationFailed = errors.Register(ModuleName, 73, "validator validation failed")
	ErrValidatorProcessingFailed = errors.Register(ModuleName, 74, "validator processing failed")
	ErrValidatorStorageFailed   = errors.Register(ModuleName, 75, "validator storage failed")
	ErrValidatorRetrievalFailed = errors.Register(ModuleName, 76, "validator retrieval failed")
	ErrValidatorCorrupted       = errors.Register(ModuleName, 77, "validator corrupted")
	ErrValidatorIncomplete      = errors.Register(ModuleName, 78, "validator incomplete")
	ErrValidatorDuplicate       = errors.Register(ModuleName, 79, "validator duplicate")
	ErrValidatorInactive        = errors.Register(ModuleName, 80, "validator inactive")

	// Address-related errors
	ErrAddressNotFound        = errors.Register(ModuleName, 81, "address not found")
	ErrAddressIndexingFailed  = errors.Register(ModuleName, 82, "address indexing failed")
	ErrAddressValidationFailed = errors.Register(ModuleName, 83, "address validation failed")
	ErrAddressProcessingFailed = errors.Register(ModuleName, 84, "address processing failed")
	ErrAddressStorageFailed   = errors.Register(ModuleName, 85, "address storage failed")
	ErrAddressRetrievalFailed = errors.Register(ModuleName, 86, "address retrieval failed")
	ErrAddressCorrupted       = errors.Register(ModuleName, 87, "address corrupted")
	ErrAddressIncomplete      = errors.Register(ModuleName, 88, "address incomplete")
	ErrAddressDuplicate       = errors.Register(ModuleName, 89, "address duplicate")
	ErrAddressBlacklisted     = errors.Register(ModuleName, 90, "address blacklisted")

	// Search-related errors
	ErrSearchFailed           = errors.Register(ModuleName, 91, "search failed")
	ErrSearchIndexingFailed   = errors.Register(ModuleName, 92, "search indexing failed")
	ErrSearchValidationFailed = errors.Register(ModuleName, 93, "search validation failed")
	ErrSearchProcessingFailed = errors.Register(ModuleName, 94, "search processing failed")
	ErrSearchStorageFailed    = errors.Register(ModuleName, 95, "search storage failed")
	ErrSearchRetrievalFailed  = errors.Register(ModuleName, 96, "search retrieval failed")
	ErrSearchCorrupted        = errors.Register(ModuleName, 97, "search corrupted")
	ErrSearchIncomplete       = errors.Register(ModuleName, 98, "search incomplete")
	ErrSearchTimeout          = errors.Register(ModuleName, 99, "search timeout")
	ErrSearchOverload         = errors.Register(ModuleName, 100, "search overload")

	// Statistics-related errors
	ErrStatisticsNotFound        = errors.Register(ModuleName, 101, "statistics not found")
	ErrStatisticsIndexingFailed  = errors.Register(ModuleName, 102, "statistics indexing failed")
	ErrStatisticsValidationFailed = errors.Register(ModuleName, 103, "statistics validation failed")
	ErrStatisticsProcessingFailed = errors.Register(ModuleName, 104, "statistics processing failed")
	ErrStatisticsStorageFailed   = errors.Register(ModuleName, 105, "statistics storage failed")
	ErrStatisticsRetrievalFailed = errors.Register(ModuleName, 106, "statistics retrieval failed")
	ErrStatisticsCorrupted       = errors.Register(ModuleName, 107, "statistics corrupted")
	ErrStatisticsIncomplete      = errors.Register(ModuleName, 108, "statistics incomplete")
	ErrStatisticsOutdated        = errors.Register(ModuleName, 109, "statistics outdated")
	ErrStatisticsCalculationFailed = errors.Register(ModuleName, 110, "statistics calculation failed")

	// Cache-related errors
	ErrCacheNotFound        = errors.Register(ModuleName, 111, "cache not found")
	ErrCacheIndexingFailed  = errors.Register(ModuleName, 112, "cache indexing failed")
	ErrCacheValidationFailed = errors.Register(ModuleName, 113, "cache validation failed")
	ErrCacheProcessingFailed = errors.Register(ModuleName, 114, "cache processing failed")
	ErrCacheStorageFailed   = errors.Register(ModuleName, 115, "cache storage failed")
	ErrCacheRetrievalFailed = errors.Register(ModuleName, 116, "cache retrieval failed")
	ErrCacheCorrupted       = errors.Register(ModuleName, 117, "cache corrupted")
	ErrCacheIncomplete      = errors.Register(ModuleName, 118, "cache incomplete")
	ErrCacheExpired         = errors.Register(ModuleName, 119, "cache expired")
	ErrCacheInvalidation    = errors.Register(ModuleName, 120, "cache invalidation failed")

	// Indexing-related errors
	ErrIndexingFailed       = errors.Register(ModuleName, 121, "indexing failed")
	ErrIndexingValidationFailed = errors.Register(ModuleName, 122, "indexing validation failed")
	ErrIndexingProcessingFailed = errors.Register(ModuleName, 123, "indexing processing failed")
	ErrIndexingStorageFailed    = errors.Register(ModuleName, 124, "indexing storage failed")
	ErrIndexingRetrievalFailed  = errors.Register(ModuleName, 125, "indexing retrieval failed")
	ErrIndexingCorrupted        = errors.Register(ModuleName, 126, "indexing corrupted")
	ErrIndexingIncomplete       = errors.Register(ModuleName, 127, "indexing incomplete")
	ErrIndexingTimeout          = errors.Register(ModuleName, 128, "indexing timeout")
	ErrIndexingOverload         = errors.Register(ModuleName, 129, "indexing overload")
	ErrIndexingBatchFailed      = errors.Register(ModuleName, 130, "indexing batch failed")

	// Analytics-related errors
	ErrAnalyticsFailed           = errors.Register(ModuleName, 131, "analytics failed")
	ErrAnalyticsValidationFailed = errors.Register(ModuleName, 132, "analytics validation failed")
	ErrAnalyticsProcessingFailed = errors.Register(ModuleName, 133, "analytics processing failed")
	ErrAnalyticsStorageFailed    = errors.Register(ModuleName, 134, "analytics storage failed")
	ErrAnalyticsRetrievalFailed  = errors.Register(ModuleName, 135, "analytics retrieval failed")
	ErrAnalyticsCorrupted        = errors.Register(ModuleName, 136, "analytics corrupted")
	ErrAnalyticsIncomplete       = errors.Register(ModuleName, 137, "analytics incomplete")
	ErrAnalyticsTimeout          = errors.Register(ModuleName, 138, "analytics timeout")
	ErrAnalyticsOverload         = errors.Register(ModuleName, 139, "analytics overload")
	ErrAnalyticsCalculationFailed = errors.Register(ModuleName, 140, "analytics calculation failed")

	// Notification-related errors
	ErrNotificationFailed           = errors.Register(ModuleName, 141, "notification failed")
	ErrNotificationValidationFailed = errors.Register(ModuleName, 142, "notification validation failed")
	ErrNotificationProcessingFailed = errors.Register(ModuleName, 143, "notification processing failed")
	ErrNotificationStorageFailed    = errors.Register(ModuleName, 144, "notification storage failed")
	ErrNotificationRetrievalFailed  = errors.Register(ModuleName, 145, "notification retrieval failed")
	ErrNotificationCorrupted        = errors.Register(ModuleName, 146, "notification corrupted")
	ErrNotificationIncomplete       = errors.Register(ModuleName, 147, "notification incomplete")
	ErrNotificationTimeout          = errors.Register(ModuleName, 148, "notification timeout")
	ErrNotificationOverload         = errors.Register(ModuleName, 149, "notification overload")
	ErrNotificationDeliveryFailed   = errors.Register(ModuleName, 150, "notification delivery failed")

	// Cultural-related errors
	ErrCulturalQuoteNotFound        = errors.Register(ModuleName, 151, "cultural quote not found")
	ErrCulturalQuoteIndexingFailed  = errors.Register(ModuleName, 152, "cultural quote indexing failed")
	ErrCulturalQuoteValidationFailed = errors.Register(ModuleName, 153, "cultural quote validation failed")
	ErrCulturalQuoteProcessingFailed = errors.Register(ModuleName, 154, "cultural quote processing failed")
	ErrCulturalQuoteStorageFailed   = errors.Register(ModuleName, 155, "cultural quote storage failed")
	ErrCulturalQuoteRetrievalFailed = errors.Register(ModuleName, 156, "cultural quote retrieval failed")
	ErrCulturalQuoteCorrupted       = errors.Register(ModuleName, 157, "cultural quote corrupted")
	ErrCulturalQuoteIncomplete      = errors.Register(ModuleName, 158, "cultural quote incomplete")
	ErrCulturalQuoteDuplicate       = errors.Register(ModuleName, 159, "cultural quote duplicate")
	ErrCulturalQuoteSelectionFailed = errors.Register(ModuleName, 160, "cultural quote selection failed")

	// Patriotism-related errors
	ErrPatriotismScoreNotFound        = errors.Register(ModuleName, 161, "patriotism score not found")
	ErrPatriotismScoreIndexingFailed  = errors.Register(ModuleName, 162, "patriotism score indexing failed")
	ErrPatriotismScoreValidationFailed = errors.Register(ModuleName, 163, "patriotism score validation failed")
	ErrPatriotismScoreProcessingFailed = errors.Register(ModuleName, 164, "patriotism score processing failed")
	ErrPatriotismScoreStorageFailed   = errors.Register(ModuleName, 165, "patriotism score storage failed")
	ErrPatriotismScoreRetrievalFailed = errors.Register(ModuleName, 166, "patriotism score retrieval failed")
	ErrPatriotismScoreCorrupted       = errors.Register(ModuleName, 167, "patriotism score corrupted")
	ErrPatriotismScoreIncomplete      = errors.Register(ModuleName, 168, "patriotism score incomplete")
	ErrPatriotismScoreCalculationFailed = errors.Register(ModuleName, 169, "patriotism score calculation failed")
	ErrPatriotismLeaderboardFailed    = errors.Register(ModuleName, 170, "patriotism leaderboard failed")

	// Holder ranking-related errors
	ErrHolderRankingNotFound        = errors.Register(ModuleName, 171, "holder ranking not found")
	ErrHolderRankingIndexingFailed  = errors.Register(ModuleName, 172, "holder ranking indexing failed")
	ErrHolderRankingValidationFailed = errors.Register(ModuleName, 173, "holder ranking validation failed")
	ErrHolderRankingProcessingFailed = errors.Register(ModuleName, 174, "holder ranking processing failed")
	ErrHolderRankingStorageFailed   = errors.Register(ModuleName, 175, "holder ranking storage failed")
	ErrHolderRankingRetrievalFailed = errors.Register(ModuleName, 176, "holder ranking retrieval failed")
	ErrHolderRankingCorrupted       = errors.Register(ModuleName, 177, "holder ranking corrupted")
	ErrHolderRankingIncomplete      = errors.Register(ModuleName, 178, "holder ranking incomplete")
	ErrHolderRankingCalculationFailed = errors.Register(ModuleName, 179, "holder ranking calculation failed")
	ErrHolderRankingUpdateFailed    = errors.Register(ModuleName, 180, "holder ranking update failed")

	// Donation tracking-related errors
	ErrDonationTrackingNotFound        = errors.Register(ModuleName, 181, "donation tracking not found")
	ErrDonationTrackingIndexingFailed  = errors.Register(ModuleName, 182, "donation tracking indexing failed")
	ErrDonationTrackingValidationFailed = errors.Register(ModuleName, 183, "donation tracking validation failed")
	ErrDonationTrackingProcessingFailed = errors.Register(ModuleName, 184, "donation tracking processing failed")
	ErrDonationTrackingStorageFailed   = errors.Register(ModuleName, 185, "donation tracking storage failed")
	ErrDonationTrackingRetrievalFailed = errors.Register(ModuleName, 186, "donation tracking retrieval failed")
	ErrDonationTrackingCorrupted       = errors.Register(ModuleName, 187, "donation tracking corrupted")
	ErrDonationTrackingIncomplete      = errors.Register(ModuleName, 188, "donation tracking incomplete")
	ErrDonationTrackingCalculationFailed = errors.Register(ModuleName, 189, "donation tracking calculation failed")
	ErrDonationTrackingUpdateFailed    = errors.Register(ModuleName, 190, "donation tracking update failed")

	// Token burn-related errors
	ErrTokenBurnNotFound        = errors.Register(ModuleName, 191, "token burn not found")
	ErrTokenBurnIndexingFailed  = errors.Register(ModuleName, 192, "token burn indexing failed")
	ErrTokenBurnValidationFailed = errors.Register(ModuleName, 193, "token burn validation failed")
	ErrTokenBurnProcessingFailed = errors.Register(ModuleName, 194, "token burn processing failed")
	ErrTokenBurnStorageFailed   = errors.Register(ModuleName, 195, "token burn storage failed")
	ErrTokenBurnRetrievalFailed = errors.Register(ModuleName, 196, "token burn retrieval failed")
	ErrTokenBurnCorrupted       = errors.Register(ModuleName, 197, "token burn corrupted")
	ErrTokenBurnIncomplete      = errors.Register(ModuleName, 198, "token burn incomplete")
	ErrTokenBurnDuplicate       = errors.Register(ModuleName, 199, "token burn duplicate")
	ErrTokenBurnCalculationFailed = errors.Register(ModuleName, 200, "token burn calculation failed")

	// Tax-related errors
	ErrTaxStatisticsNotFound        = errors.Register(ModuleName, 201, "tax statistics not found")
	ErrTaxStatisticsIndexingFailed  = errors.Register(ModuleName, 202, "tax statistics indexing failed")
	ErrTaxStatisticsValidationFailed = errors.Register(ModuleName, 203, "tax statistics validation failed")
	ErrTaxStatisticsProcessingFailed = errors.Register(ModuleName, 204, "tax statistics processing failed")
	ErrTaxStatisticsStorageFailed   = errors.Register(ModuleName, 205, "tax statistics storage failed")
	ErrTaxStatisticsRetrievalFailed = errors.Register(ModuleName, 206, "tax statistics retrieval failed")
	ErrTaxStatisticsCorrupted       = errors.Register(ModuleName, 207, "tax statistics corrupted")
	ErrTaxStatisticsIncomplete      = errors.Register(ModuleName, 208, "tax statistics incomplete")
	ErrTaxStatisticsCalculationFailed = errors.Register(ModuleName, 209, "tax statistics calculation failed")
	ErrTaxStatisticsUpdateFailed    = errors.Register(ModuleName, 210, "tax statistics update failed")

	// Network-related errors
	ErrNetworkStatsNotFound        = errors.Register(ModuleName, 211, "network stats not found")
	ErrNetworkStatsIndexingFailed  = errors.Register(ModuleName, 212, "network stats indexing failed")
	ErrNetworkStatsValidationFailed = errors.Register(ModuleName, 213, "network stats validation failed")
	ErrNetworkStatsProcessingFailed = errors.Register(ModuleName, 214, "network stats processing failed")
	ErrNetworkStatsStorageFailed   = errors.Register(ModuleName, 215, "network stats storage failed")
	ErrNetworkStatsRetrievalFailed = errors.Register(ModuleName, 216, "network stats retrieval failed")
	ErrNetworkStatsCorrupted       = errors.Register(ModuleName, 217, "network stats corrupted")
	ErrNetworkStatsIncomplete      = errors.Register(ModuleName, 218, "network stats incomplete")
	ErrNetworkStatsCalculationFailed = errors.Register(ModuleName, 219, "network stats calculation failed")
	ErrNetworkStatsUpdateFailed    = errors.Register(ModuleName, 220, "network stats update failed")

	// Activity-related errors
	ErrActivityNotFound        = errors.Register(ModuleName, 221, "activity not found")
	ErrActivityIndexingFailed  = errors.Register(ModuleName, 222, "activity indexing failed")
	ErrActivityValidationFailed = errors.Register(ModuleName, 223, "activity validation failed")
	ErrActivityProcessingFailed = errors.Register(ModuleName, 224, "activity processing failed")
	ErrActivityStorageFailed   = errors.Register(ModuleName, 225, "activity storage failed")
	ErrActivityRetrievalFailed = errors.Register(ModuleName, 226, "activity retrieval failed")
	ErrActivityCorrupted       = errors.Register(ModuleName, 227, "activity corrupted")
	ErrActivityIncomplete      = errors.Register(ModuleName, 228, "activity incomplete")
	ErrActivityDuplicate       = errors.Register(ModuleName, 229, "activity duplicate")
	ErrActivityRecordingFailed = errors.Register(ModuleName, 230, "activity recording failed")

	// System-related errors
	ErrSystemOverload         = errors.Register(ModuleName, 231, "system overload")
	ErrSystemMaintenance      = errors.Register(ModuleName, 232, "system maintenance")
	ErrSystemUnavailable      = errors.Register(ModuleName, 233, "system unavailable")
	ErrSystemError            = errors.Register(ModuleName, 234, "system error")
	ErrSystemTimeout          = errors.Register(ModuleName, 235, "system timeout")
	ErrSystemResourceExhausted = errors.Register(ModuleName, 236, "system resource exhausted")
	ErrSystemConfigurationError = errors.Register(ModuleName, 237, "system configuration error")
	ErrSystemIntegrityError   = errors.Register(ModuleName, 238, "system integrity error")
	ErrSystemSecurityError    = errors.Register(ModuleName, 239, "system security error")
	ErrSystemCompatibilityError = errors.Register(ModuleName, 240, "system compatibility error")

	// Permission-related errors
	ErrPermissionDenied       = errors.Register(ModuleName, 241, "permission denied")
	ErrAccessDenied           = errors.Register(ModuleName, 242, "access denied")
	ErrAuthenticationRequired = errors.Register(ModuleName, 243, "authentication required")
	ErrAuthenticationFailed   = errors.Register(ModuleName, 244, "authentication failed")
	ErrAuthorizationRequired  = errors.Register(ModuleName, 245, "authorization required")
	ErrAuthorizationFailed    = errors.Register(ModuleName, 246, "authorization failed")
	ErrInsufficientPrivileges = errors.Register(ModuleName, 247, "insufficient privileges")
	ErrInsufficientPermissions = errors.Register(ModuleName, 248, "insufficient permissions")
	ErrInsufficientRights     = errors.Register(ModuleName, 249, "insufficient rights")
	ErrUnauthorizedAccess     = errors.Register(ModuleName, 250, "unauthorized access")

	// Rate limiting errors
	ErrRateLimitExceeded      = errors.Register(ModuleName, 251, "rate limit exceeded")
	ErrQuotaExceeded          = errors.Register(ModuleName, 252, "quota exceeded")
	ErrThrottlingActive       = errors.Register(ModuleName, 253, "throttling active")
	ErrTooManyRequests        = errors.Register(ModuleName, 254, "too many requests")
	ErrConcurrencyLimitExceeded = errors.Register(ModuleName, 255, "concurrency limit exceeded")
	ErrResourceLimitExceeded  = errors.Register(ModuleName, 256, "resource limit exceeded")
	ErrBandwidthLimitExceeded = errors.Register(ModuleName, 257, "bandwidth limit exceeded")
	ErrStorageLimitExceeded   = errors.Register(ModuleName, 258, "storage limit exceeded")
	ErrMemoryLimitExceeded    = errors.Register(ModuleName, 259, "memory limit exceeded")
	ErrCPULimitExceeded       = errors.Register(ModuleName, 260, "CPU limit exceeded")

	// Data integrity errors
	ErrDataIntegrityViolation = errors.Register(ModuleName, 261, "data integrity violation")
	ErrDataConsistencyError   = errors.Register(ModuleName, 262, "data consistency error")
	ErrDataCoherenceError     = errors.Register(ModuleName, 263, "data coherence error")
	ErrDataValidityError      = errors.Register(ModuleName, 264, "data validity error")
	ErrDataAccuracyError      = errors.Register(ModuleName, 265, "data accuracy error")
	ErrDataCompletenessError  = errors.Register(ModuleName, 266, "data completeness error")
	ErrDataTimelinessError    = errors.Register(ModuleName, 267, "data timeliness error")
	ErrDataRelevanceError     = errors.Register(ModuleName, 268, "data relevance error")
	ErrDataQualityError       = errors.Register(ModuleName, 269, "data quality error")
	ErrDataSecurityError      = errors.Register(ModuleName, 270, "data security error")

	// Generic errors
	ErrNotImplemented         = errors.Register(ModuleName, 271, "not implemented")
	ErrNotSupported           = errors.Register(ModuleName, 272, "not supported")
	ErrNotAvailable           = errors.Register(ModuleName, 273, "not available")
	ErrNotFound               = errors.Register(ModuleName, 274, "not found")
	ErrNotReady               = errors.Register(ModuleName, 275, "not ready")
	ErrNotAllowed             = errors.Register(ModuleName, 276, "not allowed")
	ErrNotPermitted           = errors.Register(ModuleName, 277, "not permitted")
	ErrNotAuthorized          = errors.Register(ModuleName, 278, "not authorized")
	ErrNotAuthenticated       = errors.Register(ModuleName, 279, "not authenticated")
	ErrNotValid               = errors.Register(ModuleName, 280, "not valid")

	// Deprecated errors (for backward compatibility)
	ErrDeprecated             = errors.Register(ModuleName, 281, "deprecated")
	ErrObsolete               = errors.Register(ModuleName, 282, "obsolete")
	ErrLegacy                 = errors.Register(ModuleName, 283, "legacy")
	ErrUnsupported            = errors.Register(ModuleName, 284, "unsupported")
	ErrIncompatible           = errors.Register(ModuleName, 285, "incompatible")
	ErrMigrationRequired      = errors.Register(ModuleName, 286, "migration required")
	ErrUpgradeRequired        = errors.Register(ModuleName, 287, "upgrade required")
	ErrVersionMismatch        = errors.Register(ModuleName, 288, "version mismatch")
	ErrProtocolMismatch       = errors.Register(ModuleName, 289, "protocol mismatch")
	ErrFormatMismatch         = errors.Register(ModuleName, 290, "format mismatch")

	// Emergency errors
	ErrEmergencyMode          = errors.Register(ModuleName, 291, "emergency mode")
	ErrEmergencyShutdown      = errors.Register(ModuleName, 292, "emergency shutdown")
	ErrEmergencyMaintenance   = errors.Register(ModuleName, 293, "emergency maintenance")
	ErrEmergencyUpgrade       = errors.Register(ModuleName, 294, "emergency upgrade")
	ErrEmergencyReboot        = errors.Register(ModuleName, 295, "emergency reboot")
	ErrEmergencyRestart       = errors.Register(ModuleName, 296, "emergency restart")
	ErrEmergencyReset         = errors.Register(ModuleName, 297, "emergency reset")
	ErrEmergencyRecovery      = errors.Register(ModuleName, 298, "emergency recovery")
	ErrEmergencyBackup        = errors.Register(ModuleName, 299, "emergency backup")
	ErrEmergencyRestore       = errors.Register(ModuleName, 300, "emergency restore")
)
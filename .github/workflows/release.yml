name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: 1.21.x
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Build binary
      run: |
        export GOOS=${{ matrix.os }}
        export GOARCH=${{ matrix.arch }}
        export CGO_ENABLED=0
        
        if [ "${{ matrix.os }}" = "windows" ]; then
          export BINARY_NAME="deshchaind.exe"
        else
          export BINARY_NAME="deshchaind"
        fi
        
        make build
        
        # Create release directory
        mkdir -p release
        
        # Create archive
        if [ "${{ matrix.os }}" = "windows" ]; then
          zip -r release/deshchain-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.zip bin/$BINARY_NAME
        else
          tar -czf release/deshchain-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C bin $BINARY_NAME
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: release/

  docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          deshchain/deshchain
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    runs-on: ubuntu-latest
    needs: [build, docker]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: release/
    
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from commits since last tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
        fi
        
        # Add Docker image info
        echo "" >> CHANGELOG.md
        echo "## Docker Images" >> CHANGELOG.md
        echo "- \`deshchain/deshchain:${{ github.ref_name }}\`" >> CHANGELOG.md
        echo "- \`ghcr.io/${{ github.repository }}:${{ github.ref_name }}\`" >> CHANGELOG.md
        
        # Set output for release body
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        files: release/*
        draft: false
        prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update latest tag
      if: ${{ !contains(github.ref, 'rc') && !contains(github.ref, 'beta') && !contains(github.ref, 'alpha') }}
      run: |
        git tag -f latest
        git push origin latest -f
    
    - name: Notify release
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        text: |
          DeshChain ${{ github.ref_name }} has been released!
          Download: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
          Docker: `docker pull deshchain/deshchain:${{ github.ref_name }}`
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  update-docs:
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{ !contains(github.ref, 'rc') && !contains(github.ref, 'beta') && !contains(github.ref, 'alpha') }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.DOCS_TOKEN }}
        repository: deshchain/docs
        path: docs
    
    - name: Update version in docs
      run: |
        cd docs
        # Update version references in documentation
        find . -name "*.md" -exec sed -i 's/deshchain\/deshchain:[v0-9.]\+/deshchain\/deshchain:${{ github.ref_name }}/g' {} +
        
        # Commit changes
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Update DeshChain version to ${{ github.ref_name }}" || exit 0
        git push